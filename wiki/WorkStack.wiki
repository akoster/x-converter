#summary Assignments for the project

= Week 20 =

  # Create an application which rotates each character in an input String 180 degrees (see WordRotations)
  # The same for 90 degrees clockwise
  # download a dictionary of english words somewhere
  # Extend the application so that it can find all the rotonyms in the dictionary
  # Extend the application to also find rotodromes in the dictionary

= Week 19 = 

Read about the 'bridge pattern'. Look up Gang of Four (GoF) software design patterns.
Think about using this pattern to abstract both the commands and the storage implementations from the DataStore application.

See doc/design.txt
Create a rough design for the converter application so that we can do conversions using converter plugins.

= Week 13 = 

Add 'clear' and 'delete' commands to StorageTest (first expand Storage with two abstract methods for this).

Add log4j.properties

Apply the 'command pattern':
Create an interface called 'Command' with two methods:
  public void execute(Scanner s);
  public boolean is(String command);
For each command (set, read, store, etc) create an implementation of this Command interface. When a user enters a command, the corresponding Command implementation should be instantiated, and the execute method should be called on it.

= Week 12 =

Add 'clear' and 'delete' commands to StorageTest (first expand Storage with two abstract methods for this).

Read about Google Guice (look at an online example of how this works)

Add maven2 to the project (create a pom.xml and create the correct project structure)
Add Log4j, Junit4 and Google guice dependencies to the pom.

= Week 11 =

Read about dependency injection (also called 'inversion of control'). Notable frameworks for this in Java are Spring and Google Guice. Bonus: resolve issue 3.

Resolve issue 4: Expand StorageTest so that the user can input commands